//
//  AgeGroupPerHousehold.swift

//  Automatically created by SwiftDTO.
//  Copyright (c) 2016 Farbflash. All rights reserved.

// DO NOT EDIT THIS FILE!
// This file was automatically generated from a xcmodel file (CoreData XML Scheme)
// Edit the source coredata model (in the CoreData editor) and then use the SwiftDTO
// to create the corresponding DTO source files automatically

import Foundation

public struct AgeGroupPerHousehold: JSOBJSerializable, DictionaryConvertible, CustomStringConvertible {

    // DTO properties:
    public let ageGrp: AgeGroup?
    public let noOfPers: Int?

    // Default initializer:
    public init(ageGrp: AgeGroup?, noOfPers: Int?) {
        self.ageGrp = ageGrp
        self.noOfPers = noOfPers
    }

    // Object creation using JSON dictionary representation from NSJSONSerializer:
    public init?(jsonData: JSOBJ?) {
        guard let jsonData = jsonData else { return nil }
        if let val = AgeGroup(jsonData: jsonData["ageGrp"] as? JSOBJ) { self.ageGrp = val }
        else { ageGrp = nil }
        noOfPers = jsonData["noOfPers"] as? Int

        #if DEBUG
            DTODiagnostics.analize(jsonData: jsonData, expectedKeys: allExpectedKeys, inClassWithName: "AgeGroupPerHousehold")
        #endif
    }

    // all expected keys (for diagnostics in debug mode):
    public var allExpectedKeys: Set<String> {
        return Set(["ageGrp", "noOfPers"])
    }

    // dictionary representation (for use with NSJSONSerializer or as parameters for URL request):
    public var jsobjRepresentation: JSOBJ {
        var jsonData = JSOBJ()
        if ageGrp != nil { jsonData["ageGrp"] = ageGrp!.jsobjRepresentation }
        if noOfPers != nil { jsonData["noOfPers"] = noOfPers! }
        return jsonData
    }

    // printable protocol conformance:
    public var description: String { return "\(jsonString())" }

    // pretty print JSON string representation:
    public func jsonString(paddingPrefix prefix: String = "", printNulls: Bool = false) -> String {
        var returnString = "{\n"

        if let ageGrp = ageGrp { returnString.append("    \(prefix)\"ageGrp\": \("\(ageGrp.jsonString(paddingPrefix: "\(prefix)    ", printNulls: printNulls))"),\n") }
        else if printNulls { returnString.append("    \(prefix)\"ageGrp\": null,\n") }

        if let noOfPers = noOfPers { returnString.append("    \(prefix)\"noOfPers\": \(noOfPers),\n") }
        else if printNulls { returnString.append("    \(prefix)\"noOfPers\": null,\n") }


        returnString = returnString.trimmingCharacters(in: CharacterSet(charactersIn: "\n"))
        returnString = returnString.trimmingCharacters(in: CharacterSet(charactersIn: ","))
        returnString += "\n\(prefix)}"
        return returnString
    }
}